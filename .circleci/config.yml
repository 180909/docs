# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  publish-next:
    docker:
      - image: circleci/node:11.1
    working_directory: /home/circleci/docs
    steps:
      - checkout
      - run: cd website; npm ci
      - run: git config --global user.email "aeneas@ory.sh"
      - run: git config --global user.name "aeneasr"
      - run: cd website; npm run build
      - run: cd website; npm run format
      - run: |
          branch=$(date +%s)
          git checkout -b $branch
          git add -A
          git commit -a -m "Update files to match release $CIRCLE_SHA1" --allow-empty
          git push origin HEAD:master
      - run: |
          git clone git@github.com:ory/web.git ../web
          rm -rf ../web/docs/*
          cp -R ./website/build/docs/* ../web/docs/
          cd ../web && git add -A && git commit -a -m "docs: Bump to $CIRCLE_SHA1" --allow-empty && git push origin HEAD:master

  publish-stable:
    docker:
      - image: circleci/node:11.1
    working_directory: /home/circleci/docs
    steps:
      - checkout
      - run: cd website; npm ci
      - run: git config --global user.email "aeneas@ory.sh"
      - run: git config --global user.name "aeneasr"
      - run: cd website; npm run release $(echo $CIRCLE_TAG | cut -d '+' -f2)
      - run: cd website; npm run format
      - run: |
          branch=$(date +%s)
          git checkout -b $branch
          git add -A
          git commit -a -m "Update files to match release $CIRCLE_TAG" --allow-empty
          git push origin HEAD:master
      - run: |
          git clone git@github.com:ory/web.git ../web
          rm -rf ../web/docs/*
          cp -R ./website/build/docs/* ../web/docs/
          cd ../web && git add -A && git commit -a -m "docs: Bump to $CIRCLE_TAG" --allow-empty && git push origin HEAD:master

  test:
    docker:
      - image: circleci/node:11.1
    working_directory: /home/circleci/docs
    steps:
      - checkout
      - run: cd website; npm ci
      - run: ./scripts/test-links.sh

workflows:
  version: 2
  publish:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - publish-next:
          requires:
            - test
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /master/
      - publish-stable:
          requires:
            - test
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
